@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

<div class="content-wrapper">

    @await Component.InvokeAsync("DashCard")
    <div class="row">
        <div class="col-md-4 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Ödeme Detayları</h4>
                    <canvas id="transaction-history" class="transaction-chart"></canvas>
                    <div class="bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3">
                        <div class="text-md-center text-xl-left">
                            <h6 class="mb-1">Banka Transferi</h6>
                            <p class="text-muted mb-0">07 Şub 2024, 09:12</p>
                        </div>
                        <div class="align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0">
                            <h6 class="font-weight-bold mb-0">19.990 ₺</h6>
                        </div>
                    </div>
                    <div class="bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3">
                        <div class="text-md-center text-xl-left">
                            <h6 class="mb-1">Havala/EFT Ücreti</h6>
                            <p class="text-muted mb-0">06 Şub 2019, 09:12</p>
                        </div>
                        <div class="align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0">
                            <h6 class="font-weight-bold mb-0">5010 ₺</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    @await Component.InvokeAsync("OpenProjects")
        
    </div>
    @await Component.InvokeAsync("DashCard2")
    
    <div class="row ">
    @await Component.InvokeAsync("MessageList")
        
    </div>
    <div class="row">
        
    @await Component.InvokeAsync("UserMessage")

    @await Component.InvokeAsync("SlideList")
        
        <div class="col-md-12 col-xl-4 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Görevler</h4>
                    <div class="add-items d-flex">
                        <input type="text" class="form-control todo-list-input" placeholder="Görev Ara...">
                        <button class="add btn btn-primary todo-list-add-btn">Oluştur</button>
                    </div>
                    <div class="list-wrapper">
                        <ul class="d-flex flex-column-reverse text-white todo-list todo-list-custom">
                            <!-- Javascript ile ekleniyor.. -->
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Visitors by Countries</h4>
                    <div class="row">
                        <div class="col-md-5">
                            <div class="table-responsive">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <i class="flag-icon flag-icon-tr"></i>
                                            </td>
                                            <td>Türkiye</td>
                                            <td class="text-right"> 1500 </td>
                                            <td class="text-right font-weight-medium"> 56.35% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class="flag-icon flag-icon-de"></i>
                                            </td>
                                            <td>Almanya</td>
                                            <td class="text-right"> 800 </td>
                                            <td class="text-right font-weight-medium"> 33.25% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class="flag-icon flag-icon-au"></i>
                                            </td>
                                            <td>Avusturalya</td>
                                            <td class="text-right"> 760 </td>
                                            <td class="text-right font-weight-medium"> 15.45% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class="flag-icon flag-icon-gb"></i>
                                            </td>
                                            <td>İngiltere</td>
                                            <td class="text-right"> 450 </td>
                                            <td class="text-right font-weight-medium"> 25.00% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class="flag-icon flag-icon-ro"></i>
                                            </td>
                                            <td>Romanya</td>
                                            <td class="text-right"> 620 </td>
                                            <td class="text-right font-weight-medium"> 10.25% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class="flag-icon flag-icon-br"></i>
                                            </td>
                                            <td>Brezilya</td>
                                            <td class="text-right"> 230 </td>
                                            <td class="text-right font-weight-medium"> 75.00% </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div id="audience-map" class="vector-map"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const todoList = document.querySelector('.todo-list');
        const todoInput = document.querySelector('.todo-list-input');
        const addButton = document.querySelector('.todo-list-add-btn');

        function loadTasks() {
            const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
            todoList.innerHTML = ''; // Önce mevcut görevleri temizle
            tasks.forEach(task => addTask(task.text, task.completed));
        }

        function saveTasks() {
            const tasks = Array.from(todoList.children).map(li => ({
                text: li.querySelector('label').textContent.trim(),
                completed: li.querySelector('.checkbox').checked
            }));
            localStorage.setItem('tasks', JSON.stringify(tasks));
        }

        function addTask(text, completed = false) {
            const li = document.createElement('li');
            li.innerHTML = `
                <div class="form-check form-check-primary">
                    <label class="form-check-label">
                        <input class="checkbox" type="checkbox" ${completed ? 'checked' : ''}> ${text}
                    </label>
                </div>
                <i class="remove mdi mdi-close-box"></i>
            `;
            todoList.prepend(li);
        }

        function handleTaskCompletion(event) {
            if (event.target.classList.contains('checkbox')) {
                event.target.closest('li').classList.toggle('completed');
                saveTasks();
            }
        }

        function handleNewTask() {
            const taskText = todoInput.value.trim();
            if (taskText !== '') {
                addTask(taskText);
                todoInput.value = '';
                saveTasks();
            }
        }

        function removeTask(event) {
            if (event.target.classList.contains('remove')) {
                event.target.closest('li').remove();
                saveTasks();
            }
        }

        todoList.addEventListener('click', handleTaskCompletion);
        addButton.addEventListener('click', handleNewTask);
        todoList.addEventListener('click', removeTask);

        loadTasks();
    });

</script>