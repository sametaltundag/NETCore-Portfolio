#pragma checksum "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "13c5be590444e162ad925e3facbc6fb82a5cfa458e7f9f5782fcd5b3406d68db"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\NETCorePortfolio\NETCorePortfolio\Views\_ViewImports.cshtml"
using NETCorePortfolio;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\NETCorePortfolio\NETCorePortfolio\Views\_ViewImports.cshtml"
using NETCorePortfolio.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"13c5be590444e162ad925e3facbc6fb82a5cfa458e7f9f5782fcd5b3406d68db", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"d1eff688a01f71a47eda37782a8476c6020b9c570c04b73a5ee07c4294ed3396", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"content-wrapper\">\r\n\r\n    ");
#nullable restore
#line 8 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
Write(await Component.InvokeAsync("DashCard"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""row"">
        <div class=""col-md-4 grid-margin stretch-card"">
            <div class=""card"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Transaction History</h4>
                    <canvas id=""transaction-history"" class=""transaction-chart""></canvas>
                    <div class=""bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3"">
                        <div class=""text-md-center text-xl-left"">
                            <h6 class=""mb-1"">Transfer to Paypal</h6>
                            <p class=""text-muted mb-0"">07 Jan 2019, 09:12AM</p>
                        </div>
                        <div class=""align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0"">
                            <h6 class=""font-weight-bold mb-0"">$236</h6>
                        </div>
                    </div>
                    <div class=""bg-gray-dark d-flex d-md-block d-xl-flex flex-ro");
            WriteLiteral(@"w py-3 px-4 px-md-3 px-xl-4 rounded mt-3"">
                        <div class=""text-md-center text-xl-left"">
                            <h6 class=""mb-1"">Tranfer to Stripe</h6>
                            <p class=""text-muted mb-0"">07 Jan 2019, 09:12AM</p>
                        </div>
                        <div class=""align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0"">
                            <h6 class=""font-weight-bold mb-0"">$593</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    ");
#nullable restore
#line 37 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
Write(await Component.InvokeAsync("OpenProjects"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        \r\n    </div>\r\n    ");
#nullable restore
#line 40 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
Write(await Component.InvokeAsync("DashCard2"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    \r\n    <div class=\"row \">\r\n    ");
#nullable restore
#line 43 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
Write(await Component.InvokeAsync("MessageList"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        \r\n    </div>\r\n    <div class=\"row\">\r\n        \r\n    ");
#nullable restore
#line 48 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
Write(await Component.InvokeAsync("UserMessage"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    ");
#nullable restore
#line 50 "D:\NETCorePortfolio\NETCorePortfolio\Views\Dashboard\Index.cshtml"
Write(await Component.InvokeAsync("SlideList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        
        <div class=""col-md-12 col-xl-4 grid-margin stretch-card"">
            <div class=""card"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Görevler</h4>
                    <div class=""add-items d-flex"">
                        <input type=""text"" class=""form-control todo-list-input"" placeholder=""Görev Ara..."">
                        <button class=""add btn btn-primary todo-list-add-btn"">Oluştur</button>
                    </div>
                    <div class=""list-wrapper"">
                        <ul class=""d-flex flex-column-reverse text-white todo-list todo-list-custom"">
                            <!-- Javascript ile ekleniyor.. -->
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Visitors by C");
            WriteLiteral(@"ountries</h4>
                    <div class=""row"">
                        <div class=""col-md-5"">
                            <div class=""table-responsive"">
                                <table class=""table"">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <i class=""flag-icon flag-icon-tr""></i>
                                            </td>
                                            <td>Türkiye</td>
                                            <td class=""text-right""> 1500 </td>
                                            <td class=""text-right font-weight-medium""> 56.35% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class=""flag-icon flag-icon-de""></i>
                                            </td>
  ");
            WriteLiteral(@"                                          <td>Almanya</td>
                                            <td class=""text-right""> 800 </td>
                                            <td class=""text-right font-weight-medium""> 33.25% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class=""flag-icon flag-icon-au""></i>
                                            </td>
                                            <td>Avusturalya</td>
                                            <td class=""text-right""> 760 </td>
                                            <td class=""text-right font-weight-medium""> 15.45% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class=""flag-icon flag-icon-gb""></i>
                         ");
            WriteLiteral(@"                   </td>
                                            <td>İngiltere</td>
                                            <td class=""text-right""> 450 </td>
                                            <td class=""text-right font-weight-medium""> 25.00% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class=""flag-icon flag-icon-ro""></i>
                                            </td>
                                            <td>Romanya</td>
                                            <td class=""text-right""> 620 </td>
                                            <td class=""text-right font-weight-medium""> 10.25% </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <i class=""flag-icon flag-icon-br""></i>");
            WriteLiteral(@"
                                            </td>
                                            <td>Brezilya</td>
                                            <td class=""text-right""> 230 </td>
                                            <td class=""text-right font-weight-medium""> 75.00% </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class=""col-md-7"">
                            <div id=""audience-map"" class=""vector-map""></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener(""DOMContentLoaded"", function () {
        const todoList = document.querySelector('.todo-list');
        const todoInput = document.querySelector('.todo-list-input');
        const addButton = document.querySelector");
            WriteLiteral(@"('.todo-list-add-btn');

        function loadTasks() {
            const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
            todoList.innerHTML = ''; // Önce mevcut görevleri temizle
            tasks.forEach(task => addTask(task.text, task.completed));
        }

        function saveTasks() {
            const tasks = Array.from(todoList.children).map(li => ({
                text: li.querySelector('label').textContent.trim(),
                completed: li.querySelector('.checkbox').checked
            }));
            localStorage.setItem('tasks', JSON.stringify(tasks));
        }

        function addTask(text, completed = false) {
            const li = document.createElement('li');
            li.innerHTML = `
                <div class=""form-check form-check-primary"">
                    <label class=""form-check-label"">
                        <input class=""checkbox"" type=""checkbox"" ${completed ? 'checked' : ''}> ${text}
                    </label>
            ");
            WriteLiteral(@"    </div>
                <i class=""remove mdi mdi-close-box""></i>
            `;
            todoList.prepend(li);
        }

        function handleTaskCompletion(event) {
            if (event.target.classList.contains('checkbox')) {
                event.target.closest('li').classList.toggle('completed');
                saveTasks();
            }
        }

        function handleNewTask() {
            const taskText = todoInput.value.trim();
            if (taskText !== '') {
                addTask(taskText);
                todoInput.value = '';
                saveTasks();
            }
        }

        function removeTask(event) {
            if (event.target.classList.contains('remove')) {
                event.target.closest('li').remove();
                saveTasks();
            }
        }

        todoList.addEventListener('click', handleTaskCompletion);
        addButton.addEventListener('click', handleNewTask);
        todoList.addEventListener('click', rem");
            WriteLiteral("oveTask);\r\n\r\n        loadTasks();\r\n    });\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
